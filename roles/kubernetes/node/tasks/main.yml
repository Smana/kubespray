---
- include: install.yml

- name: Write Calico cni config
  template:
    src: "cni-calico.conf.j2"
    dest: "/etc/cni/net.d/10-calico.conf"
    owner: kube
  when: kube_network_plugin == "calico"

- name: Write kubelet config file
  template: src=kubelet.j2 dest={{ kube_config_dir }}/kubelet.env backup=yes
  notify:
    - restart kubelet

- name: write the kubecfg (auth) file for kubelet
  template: src=node-kubeconfig.yaml.j2 dest={{ kube_config_dir }}/node-kubeconfig.yaml backup=yes
  notify:
    - restart kubelet

- name: Write proxy manifest
  template:
    src: manifests/kube-proxy.manifest.j2
    dest: "{{ kube_manifest_dir }}/kube-proxy.manifest"

- name: Restart kubelet if binary changed
  command: /bin/true
  notify: restart kubelet
  when: kubelet_copy.stdout_lines

# reload-systemd
- meta: flush_handlers

- name: Enable kubelet
  service:
    name: kubelet
    enabled: yes
    state: started

- name: Configure kubectl
  command: "{{ item }}"
  with_items:
    - kubectl config set-cluster kargo-cluster --server="https://{{ hostvars[groups['kube-master'][0]]['access_ip'] | default(hostvars[groups['kube-master'][0]]['ip'] | default(hostvars[groups['kube-master'][0]]['ansible_default_ipv4']['address'])) }}:{{ kube_apiserver_port }}"
    - kubectl config set-cluster kargo-cluster --certificate-authority="{{ kube_cert_dir }}/ca.pem"
    - kubectl config set-credentials kargo-admin --client-certificate="{{ kube_cert_dir }}/node.pem"
    - kubectl config set-credentials kargo-admin --client-key="{{ kube_cert_dir }}/node-key.pem"
    - kubectl config set-credentials kargo-admin --token="{{ lookup('file', '../secrets/files/tokens/system:kubectl-' + inventory_hostname + '.token') }}"
    - kubectl config set-context kargo-context --cluster=kargo-cluster --user=kargo-admin
    - kubectl config use-context kargo-context

